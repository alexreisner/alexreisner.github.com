---
title: Geocoder
layout: post
categories: code
---
"Geocoder":http://github.com/alexreisner/geocoder (aka the rails-geocoder gem) adds object geocoding and database-agnostic distance calculations to Ruby on Rails (specifically ActiveRecord). It does not rely on proprietary database functions so finding geocoded objects in a given area is easily done using out-of-the-box MySQL or even SQLite. The code is distributed as a Ruby gem and as a Rails plugin so you can install it either way.

Distance calculations are performed using the haversine formula (which assumes the Earth is a sphere) so they are not drop-dead accurate, but they're pretty good. Google is used to fetch latitude and longitude coordinates so you must have an Internet connection for the initial fetching, but the coordinates are stored locally so inter-object distance computations are very fast.

Things you can do with Geocoder:

{% highlight ruby %}
Venue.find_near('Omaha, NE, US', 20) # venues w/in 20 mi of Omaha
Venue.find_near([40.71, 100.23], 20) # venues w/in 20 mi of point
Venue.geocoded                       # venues with coordinates
Venue.not_geocoded                   # venues without coordinates

obj.fetch_coordinates                # returns [lat, lon]
obj.fetch_coordinates!               # also writes to object

obj.nearbys(30)                      # other objects within 30 mi
obj.distance_to(40.714, -100.234)    # distance to arbitrary point
{% endhighlight %}

For source code, installation instructions, and up-to-date API documentation please see the "project page at GitHub":http://github.com/alexreisner/geocoder.


